import { addHours, format } from 'date-fns'
import Nano, { FC } from 'nano-jsx'
import { UserStats } from '../statink'
import { Card } from './card'
import { Icon } from './icon'
import { Table } from './table'

const round = (n: number, r: number) =>
  Math.round(n * Math.pow(10, r)) / Math.pow(10, r)

export type WidgetProps = Readonly<{
  screenName: string
  stats: UserStats
}>

export const Widget: FC<WidgetProps> = ({ screenName, stats }) => (
  <svg
    baseProfile="full"
    height="540"
    version="1.1"
    width="300"
    xmlns="http://www.w3.org/2000/svg"
  >
    <defs>
      <style>
        {`<![CDATA[
        text, tspan {
          font-family: sans-serif;
        }
        .label {
          fill: gray;
          font-size: 16px;
        }
        .footer {
          fill: gray;
          font-size: 10px;
        }
        ]]>`}
      </style>
    </defs>
    <Card x={0} y={20} height={500} width={300} />
    <Icon x={10} y={5} size={64} />
    <a href={`https://stat.ink/@${screenName}`}>
      <text fill="blue" font-size="24" font-weight="bold" x="90" y="60">
        {screenName}
      </text>
    </a>
    <Table
      cells={[
        [
          {
            label: 'Battles',
            value: stats.entire.battles,
          },
          {
            label: 'Win %',
            value: round(stats.entire.win_pct, 1),
          },
        ],
        [
          {
            label: 'Avg Kills',
            value: round(stats.entire.kill_avg, 2),
          },
          {
            label: 'Avg Deaths',
            value: round(stats.entire.death_avg, 2),
          },
          {
            label: 'Kill Ratio',
            value: round(stats.entire.kill_ratio, 2),
          },
        ],
        [
          {
            label: 'Kills/min',
            value: round(stats.entire.kill_per_min, 3),
          },
          {
            label: 'Deaths/min',
            value: round(stats.entire.death_per_min, 3),
          },
          {
            label: 'Total Kills',
            value: stats.entire.kill_total,
          },
        ],
      ]}
      columns={[80, 100, 80]}
      lines={[60, 60, 60]}
      x={20}
      y={100}
    />
    <line x1="20" y1="270" x2="280" y2="270" stroke="gray" />
    <text class="label" x="20" y="300">
      Ranked: Current
    </text>
    <Table
      cells={[
        [
          {
            label: '⬜',
            value: stats.gachi.rules.area.rank_current,
          },
          {
            label: '🕋',
            value: stats.gachi.rules.yagura.rank_current,
          },
          {
            label: '🦈',
            value: stats.gachi.rules.hoko.rank_current,
          },
          {
            label: '🐚',
            value: stats.gachi.rules.asari.rank_current,
          },
        ],
      ]}
      columns={[70, 70, 70, 70]}
      label={{ colour: 'black', size: 24 }}
      lines={[60]}
      value={{ anchor: 'middle' }}
      x={20}
      y={330}
    />
    <text class="label" x="20" y="390">
      Ranked: Peak
    </text>
    <Table
      cells={[
        [
          {
            label: '⬜',
            value: stats.gachi.rules.area.rank_peak,
          },
          {
            label: '🕋',
            value: stats.gachi.rules.yagura.rank_peak,
          },
          {
            label: '🦈',
            value: stats.gachi.rules.hoko.rank_peak,
          },
          {
            label: '🐚',
            value: stats.gachi.rules.asari.rank_peak,
          },
        ],
      ]}
      columns={[70, 70, 70, 70]}
      label={{ colour: 'black', size: 24 }}
      lines={[60]}
      value={{ anchor: 'middle' }}
      x={20}
      y={420}
    />
    <text class="footer" x="20" y="475">
      <tspan>
        Updated at:{' '}
        {format(addHours(stats.updated_at.time, 9), 'yyyy/MM/dd HH:mm')}
      </tspan>
      <tspan x="20" dy="14">
        Generated at: {format(addHours(new Date(), 9), 'yyyy/MM/dd HH:mm')}
      </tspan>
      <tspan x="170" dy="14">
        Generated by:{' '}
      </tspan>
      <a href="https://github.com/rokoucha/ikapri">
        <tspan fill="blue" font-weight="bold">
          IkaPri
        </tspan>
      </a>
      <tspan>.</tspan>
    </text>
  </svg>
)
